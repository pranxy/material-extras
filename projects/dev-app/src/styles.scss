/* You can add global styles to this file, and also import other style files */
@use '@angular/material' as mat;
// @use '../../extensions' as mtx;

// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// **Be sure that you only ever include this mixin once!**
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-typography-config());`
@include mat.all-component-typographies();
@include mat.core();

// Include base styles for strong focus indicators.
.demo-strong-focus {
    @include mat.strong-focus-indicators();
}

// Define the default theme (same as the example above).
$candy-app-primary: mat.define-palette(mat.$indigo-palette);
$candy-app-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
$candy-app-theme: mat.define-light-theme(
    (
        color: (
            primary: $candy-app-primary,
            accent: $candy-app-accent,
        ),
    )
);

// Include the default theme styles.
@include mat.all-component-themes($candy-app-theme);
// @include mtx.all-component-themes($candy-app-theme);
// @include mtx.all-experimental-component-themes($candy-app-theme);

// Define an alternate dark theme.
$dark-primary: mat.define-palette(mat.$blue-grey-palette);
$dark-accent: mat.define-palette(mat.$amber-palette, A200, A100, A400);
$dark-warn: mat.define-palette(mat.$deep-orange-palette);
$dark-theme: mat.define-dark-theme(
    (
        color: (
            primary: $dark-primary,
            accent: $dark-accent,
            warn: $dark-warn,
        ),
    )
);

// Include the default theme for focus indicators.
/* stylelint-disable-next-line no-duplicate-selectors */
.demo-strong-focus {
    @include mat.strong-focus-indicators-theme($candy-app-theme);
}

// Include the alternative theme styles inside of a block with a CSS class. You can make this
// CSS class whatever you want. In this example, any component inside of an element with
// `.demo-unicorn-dark-theme` will be affected by this alternate dark theme instead of the
// default theme.
.demo-unicorn-dark-theme {
    @include mat.all-component-colors($dark-theme);
    // @include mtx.all-component-colors($dark-theme);
    // @include mtx.all-experimental-component-colors($dark-theme);
}

// Include the dark theme for focus indicators.
.demo-unicorn-dark-theme.demo-strong-focus {
    @include mat.strong-focus-indicators-color($dark-theme);
}

// Create classes for all density scales which are supported by all MDC-based components.
// The classes are applied conditionally based on the selected density in the dev-app layout
// component.
$density-scales: (-1, -2, minimum, maximum);
@each $density in $density-scales {
    .demo-density-#{$density} {
    }
}
